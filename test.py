from aiogram import Bot, Dispatcher, executor, types

token = '5076818544:AAHY_0cqgAvD-TunEZO_YQRec7wf-wBy_hQ'
bot = Bot(token)
dp = Dispatcher(bot)

def keyboard():
    markup = types.ReplyKeyboardMarkup()
    button1 = types.KeyboardButton('–£–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ')
    button2 = types.KeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤')
    button3 = types.KeyboardButton('–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è')
    markup.add(button1, button2, button3)
    return markup

def keyboard1():
    markup = types.ReplyKeyboardMarkup()
    button1 = types.KeyboardButton('–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫')
    button2 = types.KeyboardButton('–í—Ç–æ—Ä–Ω–∏–∫')
    button3 = types.KeyboardButton('–°—Ä–µ–¥–∞')
    button4 = types.KeyboardButton('–ß–µ—Ç–≤–µ—Ä–≥')
    button5 = types.KeyboardButton('–ü—è—Ç–Ω–∏—Ü–∞')
    button6 = types.KeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤')
    markup.add(button1, button2, button3, button4, button5)
    markup.row(button6)
    return markup

pon = "1) –§–∏–∑–∏–∫–∞\n2) –ê–ª–≥–µ–±—Ä–∞\n3) –ê–Ω–≥–ª–∏–π—Å–∫–∏–π\n4) –ë–∏–æ–ª–æ–≥–∏—è\n5) –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞\n6) –û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ"
ftor = '1) –•–∏–º–∏—è\n2) –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∫–∞\n3) –ì–µ–æ–≥—Ä–∞—Ñ–∏—è\n4) –û–ë–ñ\n5) –ê–ª–≥–µ–±—Ä–∞\n6) –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞\n7) –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞\n8) –ê–ª–≥–µ–±—Ä–∞'
sreda = "1) –ì–µ–æ–º–µ—Ç—Ä–∏—è\n2) –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞\n3) –ê–Ω–≥–ª–∏–π—Å–∫–∏–π\n4) –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞\n5) –ò—Å—Ç–æ—Ä–∏—è\n6) –û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ\n7) –§–∏–∑-—Ä–∞\n8) –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞"
chetv = "1) –†—É—Å—Å–∫–∏–π —è–∑—ã–∫\n2) –ò—Å—Ç–æ—Ä–∏—è\n3) –§–∏–∑-—Ä–∞\n4) –ê—Å—Ç—Ä–æ–Ω–æ–º–∏—è\n5) –§–∏–∑–∏–∫–∞\n6) –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞\n7) –ê–ª–≥–µ–±—Ä–∞"
pyat = '1) –ê–ª–≥–µ–±—Ä–∞\n2) –†—É—Å—Å–∏–∫–π —è–∑—ã–∫\n3) –ì–µ–æ–≥—Ä–∞—Ñ–∏—è\n4) –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞\n5) –ì–µ–æ–º–µ—Ç—Ä–∏—è\n6) –ê–Ω–≥–ª–∏–π—Å–∫–∏–π\n7) –û–ë–ñ'

@dp.message_handler(commands=['start', '–Ω–∞—á–∞—Ç—å'])
async def answer(message):
    await message.answer('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –∫ –Ω–∞–º –≤ –±–æ—Ç!!', reply_markup = keyboard())

@dp.message_handler(content_types=['text'])
async def answer(message: types.Message):
    if message.text == '–£–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ':
        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏: ', reply_markup=keyboard1())
    elif message.text == '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤':
        await message.answer("1 —É—Ä–æ–∫: ‚è±8:35 - 9:15‚è±\n"
                             "2 —É—Ä–æ–∫: ‚è±9:30 - 10:10‚è±\n"
                             "3 —É—Ä–æ–∫: ‚è±10:30 - 11:15‚è±\n"
                             "4 —É—Ä–æ–∫: ‚è±11:30 - 12:15‚è±\n"
                             "5 —É—Ä–æ–∫: ‚è±12:25 - 13:10‚è±\n"
                             "6 —É—Ä–æ–∫: ‚è±13:25 - 14:05‚è±\n"
                             "7 —É—Ä–æ–∫: ‚è±14:25 - 15:10‚è±\n"
                             "8 —É—Ä–æ–∫: ‚è±15:25 - 16:10‚è±")
    elif message.text == '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫':
        await message.answer(pon)
    elif message.text == '–í—Ç–æ—Ä–Ω–∏–∫':
        await message.answer(ftor)
    elif message.text == '–°—Ä–µ–¥–∞':
        await message.answer(sreda)
    elif message.text == '–ß–µ—Ç–≤–µ—Ä–≥':
        await message.answer(chetv)
    elif message.text == '–ü—è—Ç–Ω–∏—Ü–∞':
        await message.answer(pyat)
    elif message.text == '–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è':
        await message.answer('1) –ü—Ä–∞–∑–¥–Ω–∏–∫ ¬´–î–µ–Ω—å –†–æ—Å—Å–∏–π—Å–∫–æ–π –ù–∞—É–∫–∏¬ª - 8 —Ñ–µ–≤—Ä–∞–ª—è ü•≥\n2) –®–∫–æ–ª—å–Ω—ã–µ '
                             '—Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–∏ –ø–æ –≤–æ–ª–µ–π–±–æ–ª—É, –ø—Ä–∏—É—Ä–æ—á–µ–Ω–Ω—ã–µ –∫–æ –î–Ω—é –∑–∞—â–∏—Ç–Ω–∏–∫–∞ –û—Ç–µ—á–µ—Å—Ç–≤–∞ - —Ñ–µ–≤—Ä–∞–ª—å üèê\n'
                             '3) –û–±—â–µ—à–∫–æ–ª—å–Ω—ã–π —Å—É–±–±–æ—Ç–Ω–∏–∫ - 18 –∞–ø—Ä–µ–ª—è üßπ\n4) –°–±–æ—Ä –º–∞–∫—É–ª–∞—Ç—É—Ä—ã -  —Å 20 –ø–æ 30 –∞–ø—Ä–µ–ª—è ‚ôªÔ∏è\n'
                             '5) –ö–æ–Ω—Ü–µ—Ä—Ç, –∞–∫—Ü–∏–∏, —Ñ–ª—ç—à-–º–æ–±—ã, –ø–æ—Å–≤—è—â—ë–Ω–Ω—ã–µ –î–Ω—é –ü–æ–±–µ–¥—ã - –ú–∞–π üé≠\n'
                             '6) –ü—Ä–∞–∑–¥–Ω–∏–∫ —É—Å–ø–µ—Ö–∞ - —Å 2 –ø–æ 8 –º–∞—è ü•≥\n7) –ü–æ—Å–ª–µ–¥–Ω–∏–π –∑–≤–æ–Ω–æ–∫ - —Å 16 –ø–æ 22 –º–∞—è üîî')
    else:
        await message.answer('—è —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—Ç—å ... ')

executor.start_polling(dp)